{"version":3,"sources":["./src/app/tabs/tabs.page.html","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/tabs/tabs-routing.module.ts","./src/app/tabs/tabs.module.ts","./src/app/tabs/tabs.page.scss","./src/app/tabs/tabs.page.ts"],"names":[],"mappings":"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","file":"tabs-tabs-module-es5.js","sourcesContent":["module.exports = \"<ion-tabs>\\n\\n  <ion-tab-bar slot=\\\"bottom\\\">\\n    <ion-tab-button tab=\\\"home\\\">\\n      <ion-icon name=\\\"home\\\"></ion-icon>\\n      <ion-label>Home</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"notify\\\">\\n      <ion-icon name=\\\"notifications\\\"></ion-icon>\\n      <ion-label>Notify</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"account\\\">\\n      <ion-icon name=\\\"person\\\"></ion-icon>\\n      <ion-label>Account</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n\\n</ion-tabs>\\n\"","// import { Injectable } from '@angular/core';\n// import { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { AuthService } from './auth.service';\n// import { LoginPage } from './login/login.page';\n// import { environment } from 'src/environments/environment';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthGuard implements CanActivate {\n\n//   constructor(private auth: AuthService, private router: Router) {\n\n//   }\n//   canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n//     return new Promise(resolve => {\n//       var token = window.localStorage.getItem(`token@${environment.appName}`);\n//       if (token) {\n//         resolve(true);\n//       } else {\n//         let url: string = state.url; // เก็บ url ที่พยายามจะเข้าใช้งาน\n//         // แต่ถ้ายังไม่ได้ล็อกอิน ให้เก็บ url ที่พยายามจะเข้าใช้งาน สำหรับไว้ลิ้งค์เปลี่ยนหน้า\n//         this.auth.redirectUrl = url; // redirectUrl เป็นตัวแปรที่อยู่ใน authService\n\n//         // ลิ้งค์ไปยังหน้าล็อกอิน เพื่อล็อกอินเข้าใช้งานก่อน\n//         this.router.navigateByUrl('/login')\n//         resolve(false); // คืนค่า false กรณียังไม่ได้ล็อกอิน\n//       }\n//     })\n//   }\n\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      return this.authService.getToken().then(() => {\n        const currentUser = this.authService.isLoggedIn;\n\n          if (currentUser) {\n            // authorised so return true\n            return true;\n          }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/landing']);\n\n        return false;\n      });\n  }\n}\n","// import { Injectable } from '@angular/core';\n// import { JwtHelperService } from \"@auth0/angular-jwt\";\n// import { HttpClient } from '@angular/common/http';\n// import { BehaviorSubject } from 'rxjs';\n// import { environment } from 'src/environments/environment';\n// import { Router } from '@angular/router';\n\n\n\n// const helper = new JwtHelperService();\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthService {\n//   redirectUrl: string;\n\n//   private userData = new BehaviorSubject(null);\n//   constructor(private http: HttpClient, private router: Router) {\n    \n//   }\n\n\n//   login(credentials): Promise<any> {\n//     return new Promise((resolve, reject) => {\n//       //เรียก Api ได้ token\n//       let token = \"ddddd\"\n      \n//       // storage token in local storage\n//       window.localStorage.setItem(`token@${environment.appName}`, token);\n      \n//       // decode token to user data\n//       //let decoded = helper.decodeToken(token);\n//       let decoded = {};\n      \n//       // emit user Data to subscriber\n//       this.userData.next(decoded);\n      \n//       // resolve user data to login page\n//       resolve(decoded);\n//     })\n\n//   }\n\n//   getUser() {\n//     return this.userData.getValue();\n//   }\n\n//   logout() {\n//     window.localStorage.remove(`token@${environment.appName}`).then(() => {\n//       this.router.navigateByUrl('/');\n//       this.userData.next(null);\n//     });\n//   }\n\n// }\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { User } from './models/user';\nimport { Storage } from '@ionic/storage'\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  isLoggedIn = false;\n  token:any;\n  AUTH_SERVER_ADDRESS:  string  =  environment.apiUrl; // Your Node Address\n\n  constructor(\n    private http: HttpClient,\n    private storage: Storage\n  ) { }\n\n  login(user : User) {\n    //console.log(user);\n    return this.http.post(`${this.AUTH_SERVER_ADDRESS}/auth/login`,\n      user\n    ).pipe(\n      tap(token => {\n        //this.storage.setItem('token', token)\n        this.storage.set('token', token)\n        .then(\n          () => {\n            console.log('Token Stored');\n          },\n          error => console.error('Error storing item', error)\n        );\n        this.token = token;\n        this.isLoggedIn = true;\n        return token;\n      }),\n    );\n  }\n\n  register(fName: String, lName: String, email: String, password: String) {\n    return this.http.post(`${this.AUTH_SERVER_ADDRESS}/auth/register`,\n      {first_name: fName, last_name: lName, email: email, password: password}\n    )\n  }\n\n  logout() {\n    console.log('Logout')\n    const headers = new HttpHeaders({\n      'Authorization': this.token[\"token_type\"] + \" \" + this.token[\"access_token\"]\n    });\n    return this.http.get(`${this.AUTH_SERVER_ADDRESS}/auth/logout`, { headers: headers })\n    .pipe(\n      tap(data => {\n        this.storage.remove(\"token\");\n        this.isLoggedIn = false;\n        delete this.token;\n        return data;\n      })\n    )\n  }\n\n  user() {\n    console.log('GET User Data');\n    const headers = new HttpHeaders({\n      'Authorization': this.token[\"token_type\"]+\" \"+this.token[\"access_token\"]\n    });\n    return this.http.get<User>(`${this.AUTH_SERVER_ADDRESS}/user`, { headers: headers })\n    .pipe(\n      tap(user => {\n        return user;\n      })\n    )\n  }\n\n  getToken() {\n    //return this.storage.getItem('token').then(\n    return this.storage.get('token').then(\n      data => {\n        this.token = data;\n        if(this.token != null) {\n          this.isLoggedIn=true;\n        } else {\n          this.isLoggedIn=false;\n        }\n      },\n      error => {\n        this.token = null;\n        this.isLoggedIn=false;\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { HomeService } from '../home/home.service';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'home',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../home/home.module').then(m => m.HomePageModule),\n            // resolve: [HomeService],\n            canActivate: [AuthGuard]\n          }\n        ]\n      },\n      {\n        path: 'notify',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../notify/notify.module').then(m => m.NotifyPageModule),\n              canActivate: [AuthGuard]\n          }\n        ]\n      },\n      {\n        path: 'account',\n        children: [\n          {\n            path: '',\n            loadChildren: () =>\n              import('../account/account.module').then(m => m.AccountPageModule),\n              canActivate: [AuthGuard]\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/home',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tabs/home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule { }\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs-routing.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvdGFicy5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n\n  constructor() {}\n\n}\n"],"sourceRoot":""}